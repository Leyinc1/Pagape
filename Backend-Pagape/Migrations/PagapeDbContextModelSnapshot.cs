// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pagape.Api.Data;

#nullable disable

namespace Pagape.api.Migrations
{
    [DbContext(typeof(PagapeDbContext))]
    partial class PagapeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pagape.Api.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreadorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("CreadorId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Pagape.Api.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<int>("PagadoPorUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PagadoPorUserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Pagape.Api.Models.ExpenseSplit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DeudorUserId")
                        .HasColumnType("integer");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("integer");

                    b.Property<decimal>("MontoAdeudado")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("DeudorUserId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("ExpenseSplits");
                });

            modelBuilder.Entity("Pagape.Api.Models.Participant", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaUnion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Pagape.Api.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AQuienUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DeQuienUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AQuienUserId");

                    b.HasIndex("DeQuienUserId");

                    b.HasIndex("EventId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Pagape.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pagape.Api.Models.Event", b =>
                {
                    b.HasOne("Pagape.Api.Models.User", "Creador")
                        .WithMany("EventsCreados")
                        .HasForeignKey("CreadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creador");
                });

            modelBuilder.Entity("Pagape.Api.Models.Expense", b =>
                {
                    b.HasOne("Pagape.Api.Models.Event", "Event")
                        .WithMany("Gastos")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pagape.Api.Models.User", "PagadoPorUser")
                        .WithMany()
                        .HasForeignKey("PagadoPorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("PagadoPorUser");
                });

            modelBuilder.Entity("Pagape.Api.Models.ExpenseSplit", b =>
                {
                    b.HasOne("Pagape.Api.Models.User", "DeudorUser")
                        .WithMany()
                        .HasForeignKey("DeudorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pagape.Api.Models.Expense", "Expense")
                        .WithMany("Splits")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeudorUser");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("Pagape.Api.Models.Participant", b =>
                {
                    b.HasOne("Pagape.Api.Models.Event", "Event")
                        .WithMany("Participantes")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pagape.Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pagape.Api.Models.Payment", b =>
                {
                    b.HasOne("Pagape.Api.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("AQuienUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pagape.Api.Models.User", "Payer")
                        .WithMany()
                        .HasForeignKey("DeQuienUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pagape.Api.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.Navigation("Event");

                    b.Navigation("Payer");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("Pagape.Api.Models.Event", b =>
                {
                    b.Navigation("Gastos");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("Pagape.Api.Models.Expense", b =>
                {
                    b.Navigation("Splits");
                });

            modelBuilder.Entity("Pagape.Api.Models.User", b =>
                {
                    b.Navigation("EventsCreados");
                });
#pragma warning restore 612, 618
        }
    }
}
